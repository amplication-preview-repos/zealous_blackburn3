/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BillingAgent as PrismaBillingAgent } from "@prisma/client";

export class BillingAgentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BillingAgentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.billingAgent.count(args);
  }

  async billingAgents(
    args: Prisma.BillingAgentFindManyArgs
  ): Promise<PrismaBillingAgent[]> {
    return this.prisma.billingAgent.findMany(args);
  }
  async billingAgent(
    args: Prisma.BillingAgentFindUniqueArgs
  ): Promise<PrismaBillingAgent | null> {
    return this.prisma.billingAgent.findUnique(args);
  }
  async createBillingAgent(
    args: Prisma.BillingAgentCreateArgs
  ): Promise<PrismaBillingAgent> {
    return this.prisma.billingAgent.create(args);
  }
  async updateBillingAgent(
    args: Prisma.BillingAgentUpdateArgs
  ): Promise<PrismaBillingAgent> {
    return this.prisma.billingAgent.update(args);
  }
  async deleteBillingAgent(
    args: Prisma.BillingAgentDeleteArgs
  ): Promise<PrismaBillingAgent> {
    return this.prisma.billingAgent.delete(args);
  }
}
